[{"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/index.js":"1","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/reportWebVitals.js":"2","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/App.js":"3","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Pages/login/index.js":"4","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Pages/signup/index.js":"5","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Pages/home/index.js":"6","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Navbar/index.js":"7","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Pages/Scores/index.js":"8","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Pages/QuizManagement/index.js":"9","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Message/index.js":"10","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Modal/index.js":"11","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/db/index.js":"12","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/instruction/index.js":"13","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Question/index.js":"14","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/btnGroup/index.js":"15","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/btnOption/index.js":"16","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Redux/store.js":"17","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Redux/mcqCounter.js":"18","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Redux/scores.js":"19","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/scores/index.js":"20"},{"size":726,"mtime":1627072353394,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1626699887498,"results":"23","hashOfConfig":"22"},{"size":1558,"mtime":1627220273307,"results":"24","hashOfConfig":"22"},{"size":3341,"mtime":1627240547484,"results":"25","hashOfConfig":"22"},{"size":3766,"mtime":1626974222340,"results":"26","hashOfConfig":"22"},{"size":1525,"mtime":1627241388453,"results":"27","hashOfConfig":"22"},{"size":1182,"mtime":1627226658558,"results":"28","hashOfConfig":"22"},{"size":1440,"mtime":1627242179939,"results":"29","hashOfConfig":"22"},{"size":4269,"mtime":1627221514993,"results":"30","hashOfConfig":"22"},{"size":972,"mtime":1626802087821,"results":"31","hashOfConfig":"22"},{"size":6414,"mtime":1626986840522,"results":"32","hashOfConfig":"22"},{"size":2182,"mtime":1627240116846,"results":"33","hashOfConfig":"22"},{"size":1271,"mtime":1627241997772,"results":"34","hashOfConfig":"22"},{"size":2016,"mtime":1627235611143,"results":"35","hashOfConfig":"22"},{"size":1291,"mtime":1627045710160,"results":"36","hashOfConfig":"22"},{"size":420,"mtime":1627047646216,"results":"37","hashOfConfig":"22"},{"size":259,"mtime":1627151495393,"results":"38","hashOfConfig":"22"},{"size":591,"mtime":1627241974488,"results":"39","hashOfConfig":"22"},{"size":500,"mtime":1627241709229,"results":"40","hashOfConfig":"22"},{"size":1622,"mtime":1627241376352,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"xznzu8",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/index.js",[],["86","87"],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/reportWebVitals.js",[],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/App.js",["88","89"],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Pages/login/index.js",["90","91","92"],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Pages/signup/index.js",["93"],"import React, { useState } from \"react\";\nimport { Button, Form, Row, Col, Image } from \"react-bootstrap\";\nimport db from \"../../db\";\nimport Message from \"../../Message\";\nconst axios = require(\"axios\");\n\nfunction Signup() {\n  const [userInfo, setuserInfo] = useState({});\n  const [messageShow, setmessageShow] = useState(false);\n  const [message, setmessage] = useState(\"\");\n  const [success, setsuccess] = useState(null);\n\n  function handleChange(e) {\n    setuserInfo({ ...userInfo, [e.target.name]: e.target.value });\n  }\n\n  function toggleMessage() {\n    setmessageShow(!messageShow);\n  }\n\n  async function isUserExist() {\n    var find = 0;\n    return db.getUsers().then((users) => {\n      users.data.map((user) => user.email === userInfo.email && (find = 1));\n      return find === 1 ? true : false;\n    });\n  }\n\n  function infoMessage(message, success) {\n    setmessage(message);\n    toggleMessage();\n    setsuccess(success);\n  }\n   function createUser() {\n   db.addUser(userInfo).then(function (response) {\n        if (response.status === 201) {\n          infoMessage(\"Account created successfully\", true);\n        } else {\n          infoMessage(\"Something went wrong account cannot be created\", false);\n        }\n      })\n      .catch(function (error) {\n        infoMessage(error.message, false);\n      });\n  }\n\n  async function submit(e) {\n    e.preventDefault();\n    isUserExist().then((res) =>\n      !res\n        ? createUser()\n        : infoMessage(\"This email is already registered\", false)\n    );\n  }\n\n  return (\n    <Row xs={2} className=\"App\">\n      <Message\n        show={messageShow}\n        setShow={toggleMessage}\n        message={message}\n        success={success}\n      />\n      <Col className=\"loginCol col-md-7 \">\n        <Image\n          src=\"https://media.istockphoto.com/vectors/online-exam-online-training-courses-online-book-distance-education-vector-id1148585703?k=6&m=1148585703&s=612x612&w=0&h=76QazS79e6uNS_LzWRPUifLhJatYsrZdnCjY71O7ukA=\"\n          fluid\n          className=\"LoginImage\"\n        />\n      </Col>\n      <Col className=\"col-md-5 colForm\">\n        <Form className=\"loginForm \" onSubmit={submit}>\n          <div className=\"text-center loginHeader\">Create your account</div>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label className=\"normalFont\">Name</Form.Label>\n            <Form.Control\n              name=\"name\"\n              onChange={handleChange}\n              minLength={5}\n              required\n              type=\"text\"\n              placeholder=\"Name\"\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label className=\"normalFont\">Email address</Form.Label>\n            <Form.Control\n              name=\"email\"\n              onChange={handleChange}\n              required\n              type=\"email\"\n              placeholder=\"Enter email\"\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label className=\"normalFont\">Password</Form.Label>\n            <Form.Control\n              name=\"password\"\n              onChange={handleChange}\n              minLength={5}\n              required\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Group>\n          <div className=\" d-grid\">\n            <Button color=\"#6774DF\" size=\"lg\" type=\"submit\">\n              Sign Up\n            </Button>\n          </div>\n          <div className=\"text-center mt-4 normalFont\">\n            Already have the account{\" \"}\n            <a href=\"/login\" id=\"link\">\n              Sign In\n            </a>\n          </div>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Signup;\n","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Pages/home/index.js",["94"],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Navbar/index.js",[],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Pages/Scores/index.js",[],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Pages/QuizManagement/index.js",[],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Message/index.js",[],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Modal/index.js",["95","96"],"import React, { useEffect, useState } from \"react\";\nimport { Modal, Button, Form, Row, Col, Dropdown } from \"react-bootstrap\";\nimport db from \"../db/index\";\nimport Message from \"../Message\";\n\nfunction QuizModal({ visibility, setVisiblity, id, task }) {\n  const [optionNum, setOptionNum] = useState(2);\n  const [quiz, setquiz] = useState(null);\n  const alpha = [\"A.\", \"B.\", \"C.\", \"D.\", \"E.\", \"F.\", \"G.\", \"H.\"];\n  const [messageShow, setmessageShow] = useState(false);\n  const [message, setmessage] = useState(\"\");\n  const [success, setsuccess] = useState(null);\n  const [answer, setAnswer] = useState(\"Select the answer!\");\n  function toggleMessage() {\n    setmessageShow(!messageShow);\n  }\n\n  function infoMessage(message, success) {\n    setmessage(message);\n    toggleMessage();\n    setsuccess(success);\n  }\n\n  useEffect(() => {\n    if (task !== \"Add\") {\n      db.getMCQbyid(id)\n        .then((mcqs) => {\n          const mcq = mcqs.data.quiz;\n          setquiz(mcq);\n          setOptionNum(mcq.options.length);\n        })\n        .catch((error) => infoMessage(error.message, false));\n    }\n  }, []);\n\n  function submit(e) {\n    e.preventDefault();\n    quiz.answer\n      ? task === \"Add\"\n        ? db\n            .addMCQ(quiz)\n            .then((data) => {\n              data.status !== 404 && data.status !== 500\n                ? infoMessage(\"Successfully added MCQ\", true)\n                : infoMessage(\"Something went wrong\", false);\n              window.location.reload(false);\n            })\n            .catch((e) => console.log(e))\n        : db\n            .updateMCQ(id, quiz)\n            .then((data) => {\n              data.status !== 404 && data.status !== 500\n                ? infoMessage(\"Successfully updated the MCQ\", true)\n                : infoMessage(\"Something went wrong\", false);\n              window.location.reload(false);\n            })\n            .catch((e) => console.log(e))\n      : infoMessage(\"Please select the answer!\", false);\n  }\n\n  function handleChange(e) {\n    setquiz({ ...quiz, [e.target.name]: e.target.value });\n  }\n\n  function handleOptions(e) {\n    let options = quiz && quiz.hasOwnProperty(\"options\") ? quiz.options : [];\n    options[e.target.name] = e.target.value;\n    setquiz({ ...quiz, [e.target.placeholder]: [...options] });\n  }\n  function handleSelect(e) {\n    setquiz({ ...quiz, answer: e });\n  }\n\n  function handleRemove() {\n    let options = quiz.options;\n    options.pop();\n    setquiz({ ...quiz, options: [...options] });\n  }\n\n  return (\n    <Modal show={visibility}>\n      <Message\n        show={messageShow}\n        setShow={toggleMessage}\n        message={message}\n        success={success}\n      />\n      {/* Header */}\n      <Modal.Header>\n        <Modal.Title className=\"normalFont\"> {task} M.C.Q</Modal.Title>\n      </Modal.Header>\n      {/* Body */}\n\n      <Form onSubmit={submit}>\n        <Modal.Body>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Question</Form.Label>\n            <Form.Control\n              required\n              value={quiz && quiz.question}\n              name=\"question\"\n              type=\"question\"\n              placeholder=\"Enter question\"\n              onChange={handleChange}\n              disabled={task === \"View\"}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            {/* Option */}\n            <Form.Label>Options</Form.Label>\n            {alpha.map(\n              (options, index) =>\n                index < optionNum && (\n                  <Row className=\"mt-2\">\n                    <Col>\n                      <div className=\"mt-1 text-center normalFont\">\n                        {options}\n                      </div>\n                    </Col>\n                    <Col xs={10}>\n                      <Form.Control\n                        value={quiz && quiz.options && quiz.options[index]}\n                        placeholder=\"options\"\n                        name={index}\n                        required\n                        onChange={handleOptions}\n                        disabled={task === \"View\"}\n                      />\n                    </Col>\n                  </Row>\n                )\n            )}\n          </Form.Group>\n          {/* Add and Remove btn */}\n          {task !== \"View\" && (\n            <div className=\"d-flex \">\n              <Button\n                disabled={optionNum > alpha.length - 1}\n                variant=\"outline-success \"\n                onClick={() => setOptionNum(optionNum + 1)}\n                block\n                className=\"addOptionBtn \"\n              >\n                <ion-icon name=\"add-circle-outline\"></ion-icon>\n              </Button>\n              <Button\n                disabled={optionNum < 3}\n                variant=\"outline-danger \"\n                onClick={() => {\n                  setOptionNum(optionNum - 1);\n                  quiz && quiz.options.length === optionNum && handleRemove();\n                }}\n                className=\"addOptionBtn \"\n              >\n                <ion-icon name=\"close-circle-outline\"></ion-icon>\n              </Button>\n            </div>\n          )}\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Answer</Form.Label>\n            <Dropdown  onSelect={handleSelect}>\n              <Dropdown.Toggle\n                disabled={task === \"View\"}\n                variant=\"success\"\n                id=\"dropdown-basic\"\n              >\n                {quiz && quiz.answer ? alpha[quiz.answer] : answer}\n              </Dropdown.Toggle>\n              <Dropdown.Menu name=\"answer\">\n                {alpha.map(\n                  (options, index) =>\n                    index < optionNum && (\n                      <Dropdown.Item eventKey={index} className=\"text-center\">\n                        {options}\n                      </Dropdown.Item>\n                    )\n                )}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Form.Group>\n        </Modal.Body>\n        {/* Footer */}\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={setVisiblity}>\n            Close\n          </Button>\n          {task !== \"View\" && (\n            <Button variant=\"primary\" type=\"submit\">\n              {task}\n            </Button>\n          )}\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default QuizModal;\n","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/db/index.js",["97","98"],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/instruction/index.js",["99"],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Question/index.js",["100","101"],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/btnGroup/index.js",["102"],"import React, { useState } from \"react\";\nimport { Button, ButtonGroup, ToggleButton } from \"react-bootstrap\";\nfunction BtnGroup() {\n  const [checked, setChecked] = useState(\"1\");\n  const radios = [\n    { name: \"1\", value: \"1\" },\n    { name: \"2\", value: \"2\" },\n    { name: \"3\", value: \"3\" },\n    { name: \"4\", value: \"4\" },\n    { name: \"5\", value: \"5\" },\n    { name: \"6\", value: \"6\" },\n    { name: \"7\", value: \"7\" },\n    { name: \"8\", value: \"8\" },\n    { name: \"9\", value: \"9\" },\n    { name: \"10\", value: \"10\" },\n    { name: \">\", value: \">\" },\n  ];\n  return (\n    <div className=\"btnGroup\" >\n      <ButtonGroup>\n        {radios.map((radio, idx) => (\n          <Button\n            id=\"toggle-check\"\n            type=\"checkbox\"\n            variant={\n              checked.toString() === radio.value ? \"outline-primary\" : \"primary\"\n            }\n            disabled\n            checked={true}\n            //   checked={checked.toString() === radio.value ? false : true}\n            name={radio.name}\n            value={radio.value}\n            onClick={(e) => setChecked(radio.value)}\n          >\n            {radio.name}\n            {console.log(checked.toString() === radio.value ? false : true)}\n          </Button>\n        ))}\n      </ButtonGroup>\n    </div>\n  );\n}\n\nexport default BtnGroup;\n","/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/btnOption/index.js",[],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Redux/store.js",[],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Redux/mcqCounter.js",[],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Redux/scores.js",[],"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/scores/index.js",["103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"113","line":55,"column":52,"nodeType":"114","messageId":"115","endLine":55,"endColumn":57},{"ruleId":"108","severity":1,"message":"116","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":22},{"ruleId":"117","severity":1,"message":"118","line":22,"column":45,"nodeType":"119","messageId":"120","endLine":22,"endColumn":47},{"ruleId":"121","severity":1,"message":"122","line":25,"column":6,"nodeType":"123","endLine":25,"endColumn":8,"suggestions":"124"},{"ruleId":"108","severity":1,"message":"125","line":5,"column":7,"nodeType":"110","messageId":"111","endLine":5,"endColumn":12},{"ruleId":"108","severity":1,"message":"126","line":14,"column":7,"nodeType":"110","messageId":"111","endLine":14,"endColumn":14},{"ruleId":"108","severity":1,"message":"127","line":13,"column":18,"nodeType":"110","messageId":"111","endLine":13,"endColumn":27},{"ruleId":"121","severity":1,"message":"128","line":34,"column":6,"nodeType":"123","endLine":34,"endColumn":8,"suggestions":"129"},{"ruleId":"108","severity":1,"message":"130","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":86,"column":1,"nodeType":"133","endLine":96,"endColumn":3},{"ruleId":"108","severity":1,"message":"134","line":3,"column":23,"nodeType":"110","messageId":"111","endLine":3,"endColumn":34},{"ruleId":"108","severity":1,"message":"135","line":13,"column":10,"nodeType":"110","messageId":"111","endLine":13,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":44,"column":32,"nodeType":"119","messageId":"120","endLine":44,"endColumn":34},{"ruleId":"108","severity":1,"message":"136","line":2,"column":31,"nodeType":"110","messageId":"111","endLine":2,"endColumn":43},{"ruleId":"121","severity":1,"message":"137","line":19,"column":6,"nodeType":"123","endLine":19,"endColumn":8,"suggestions":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'ReactSession' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'History'. Either include it or remove the dependency array.","ArrayExpression",["141"],"'axios' is assigned a value but never used.","'History' is assigned a value but never used.","'setAnswer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id', 'infoMessage', and 'task'. Either include them or remove the dependency array.",["142"],"'React' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useSelector' is defined but never used.","'checked' is assigned a value but never used.","'ToggleButton' is defined but never used.","React Hook useEffect has missing dependencies: 'calculateScores' and 'user._id'. Either include them or remove the dependency array.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [History]",{"range":"150","text":"151"},"Update the dependencies array to be: [id, infoMessage, task]",{"range":"152","text":"153"},"Update the dependencies array to be: [calculateScores, user._id]",{"range":"154","text":"155"},[849,851],"[History]",[1096,1098],"[id, infoMessage, task]",[586,588],"[calculateScores, user._id]"]