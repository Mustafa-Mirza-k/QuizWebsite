{"ast":null,"code":"var _jsxFileName = \"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Pages/home/index.js\",\n    _s = $RefreshSig$();\n\nimport Cookies from \"js-cookie\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport db from \"../../db\";\nimport Instructions from \"../../instruction\";\nimport Question from \"../../Question\";\nimport ScoresShow from \"../../scores\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [quiz, setQuiz] = useState(null);\n  const [submit, setSubmit] = useState(false);\n  const [start, setStart] = useState(false);\n  const [screen, setScreen] = useState(\"Instruction\");\n  let History = useHistory();\n  useEffect(() => {\n    async function fetchQuizes() {\n      db.getMCQ().then(quizes => setQuiz(quizes.data)).catch(error => console.log(error));\n    }\n\n    fetchQuizes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" d-flex justify-content-end align-self-center \",\n      style: {\n        width: \"95%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"quizbtn\",\n          onClick: () => {\n            Cookies.remove(\"user\");\n            window.location.reload(false);\n          },\n          children: \"SignOut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contain\",\n      children: [quiz && typeof quiz.length !== \"undefined\" && screen == \"Instruction\" && /*#__PURE__*/_jsxDEV(Instructions, {\n        total: quiz.length,\n        onStart: () => setScreen(\"Questions\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), screen == \"Questions\" && (quiz && quiz.length !== 0 ? /*#__PURE__*/_jsxDEV(Question, {\n        setSubmit: () => setScreen(\"Scores\"),\n        MCQs: quiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"QuizContent\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"normalFont text-center mt-3 \",\n          style: {\n            color: \"red\"\n          },\n          children: \"No question found!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)), screen == \"Scores\" && /*#__PURE__*/_jsxDEV(ScoresShow, {\n        MCQs: quiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"aQQ7k68kHjtnghYR3XW8rLuL5os=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Pages/home/index.js"],"names":["Cookies","React","useState","useEffect","Button","useHistory","db","Instructions","Question","ScoresShow","Home","quiz","setQuiz","submit","setSubmit","start","setStart","screen","setScreen","History","fetchQuizes","getMCQ","then","quizes","data","catch","error","console","log","width","remove","window","location","reload","length","color"],"mappings":"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","sourcesContent":["import Cookies from \"js-cookie\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport db from \"../../db\";\nimport Instructions from \"../../instruction\";\nimport Question from \"../../Question\";\nimport ScoresShow from \"../../scores\";\n\nfunction Home() {\n  const [quiz, setQuiz] = useState(null);\n  const [submit, setSubmit] = useState(false);\n  const [start, setStart] = useState(false);\n  const [screen, setScreen] = useState(\"Instruction\");\n\n  let History = useHistory();\n  useEffect(() => {\n    async function fetchQuizes() {\n      db.getMCQ()\n        .then((quizes) => setQuiz(quizes.data))\n        .catch((error) => console.log(error));\n    }\n    fetchQuizes();\n  }, []);\n\n  return (\n    <div className=\"wrapper\">\n      <div\n        className=\" d-flex justify-content-end align-self-center \"\n        style={{ width: \"95%\" }}\n      >\n        <div>\n          <Button\n            className=\"quizbtn\"\n            onClick={() => {\n              Cookies.remove(\"user\");\n              window.location.reload(false);\n            }}\n          >\n            SignOut\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"contain\">\n        {quiz &&\n          typeof quiz.length !== \"undefined\" &&\n          screen == \"Instruction\" && (\n            <Instructions\n              total={quiz.length}\n              onStart={() => setScreen(\"Questions\")}\n            />\n          )}\n        {screen == \"Questions\" &&\n          (quiz && quiz.length !== 0 ? (\n            <Question setSubmit={() => setScreen(\"Scores\")} MCQs={quiz} />\n          ) : (\n            <div className=\"QuizContent\">\n              <p\n                className=\"normalFont text-center mt-3 \"\n                style={{ color: \"red\" }}\n              >\n                No question found!\n              </p>\n            </div>\n          ))}\n        {screen == \"Scores\" && <ScoresShow MCQs={quiz} />}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}