{"ast":null,"code":"var _jsxFileName = \"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/btnGroup/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BtnGroup() {\n  _s();\n\n  const [checked, setChecked] = useState(\"1\");\n  const radios = [{\n    name: \"1\",\n    value: \"1\"\n  }, {\n    name: \"2\",\n    value: \"1\"\n  }, {\n    name: \"3\",\n    value: \"1\"\n  }, {\n    name: \"4\",\n    value: \"1\"\n  }, {\n    name: \"5\",\n    value: \"1\"\n  }, {\n    name: \"6\",\n    value: \"1\"\n  }, {\n    name: \"7\",\n    value: \"1\"\n  }, {\n    name: \"8\",\n    value: \"1\"\n  }, {\n    name: \"9\",\n    value: \"1\"\n  }, {\n    name: \"10\",\n    value: \"1\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" btnGroup\",\n    children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(Button, {\n        id: \"toggle-check\",\n        type: \"checkbox\",\n        variant: checked.toString() === radio.value ? \"outline-primary\" : \"primary\",\n        disabled: true,\n        checked: true //   checked={checked.toString() === radio.value ? false : true}\n        ,\n        name: radio.name,\n        value: radio.value,\n        onClick: e => setChecked(radio.value),\n        children: [radio.name, console.log(checked.toString() === radio.value ? false : true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BtnGroup, \"Kdbsc/9B1s1cdNMfHC5DqbgH/SY=\");\n\n_c = BtnGroup;\nexport default BtnGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"BtnGroup\");","map":{"version":3,"sources":["/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/btnGroup/index.js"],"names":["React","useState","Button","ButtonGroup","ToggleButton","BtnGroup","checked","setChecked","radios","name","value","map","radio","idx","toString","e","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,YAA9B,QAAkD,iBAAlD;;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,GAAD,CAAtC;AACA,QAAMO,MAAM,GAAG,CACb;AAAEC,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GADa,EAEb;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAFa,EAGb;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAHa,EAIb;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAJa,EAKb;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GALa,EAMb;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GANa,EAOb;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAPa,EAQb;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GARa,EASb;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GATa,EAUb;AAAED,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAVa,CAAf;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE,QAAC,WAAD;AAAA,gBACGF,MAAM,CAACG,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,kBACV,QAAC,MAAD;AACE,QAAA,EAAE,EAAC,cADL;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,OAAO,EACLP,OAAO,CAACQ,QAAR,OAAuBF,KAAK,CAACF,KAA7B,GAAqC,iBAArC,GAAyD,SAJ7D;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,OAAO,EAAE,IAPX,CAQE;AARF;AASE,QAAA,IAAI,EAAEE,KAAK,CAACH,IATd;AAUE,QAAA,KAAK,EAAEG,KAAK,CAACF,KAVf;AAWE,QAAA,OAAO,EAAGK,CAAD,IAAOR,UAAU,CAACK,KAAK,CAACF,KAAP,CAX5B;AAAA,mBAaGE,KAAK,CAACH,IAbT,EAcGO,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACQ,QAAR,OAAuBF,KAAK,CAACF,KAA7B,GAAqC,KAArC,GAA6C,IAAzD,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAtCQL,Q;;KAAAA,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, ButtonGroup, ToggleButton } from \"react-bootstrap\";\nfunction BtnGroup() {\n  const [checked, setChecked] = useState(\"1\");\n  const radios = [\n    { name: \"1\", value: \"1\" },\n    { name: \"2\", value: \"1\" },\n    { name: \"3\", value: \"1\" },\n    { name: \"4\", value: \"1\" },\n    { name: \"5\", value: \"1\" },\n    { name: \"6\", value: \"1\" },\n    { name: \"7\", value: \"1\" },\n    { name: \"8\", value: \"1\" },\n    { name: \"9\", value: \"1\" },\n    { name: \"10\", value: \"1\" },\n  ];\n  return (\n    <div className=\" btnGroup\" >\n      <ButtonGroup>\n        {radios.map((radio, idx) => (\n          <Button\n            id=\"toggle-check\"\n            type=\"checkbox\"\n            variant={\n              checked.toString() === radio.value ? \"outline-primary\" : \"primary\"\n            }\n            disabled\n            checked={true}\n            //   checked={checked.toString() === radio.value ? false : true}\n            name={radio.name}\n            value={radio.value}\n            onClick={(e) => setChecked(radio.value)}\n          >\n            {radio.name}\n            {console.log(checked.toString() === radio.value ? false : true)}\n          </Button>\n        ))}\n      </ButtonGroup>\n    </div>\n  );\n}\n\nexport default BtnGroup;\n"]},"metadata":{},"sourceType":"module"}