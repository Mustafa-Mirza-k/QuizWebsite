{"ast":null,"code":"var _jsxFileName = \"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/btnGroup/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BtnGroup() {\n  _s();\n\n  const [checked, setChecked] = useState(\"1\");\n  const radios = [{\n    name: \"1\",\n    value: \"1\"\n  }, {\n    name: \"2\",\n    value: \"2\"\n  }, {\n    name: \"3\",\n    value: \"3\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mb-2\",\n        id: \"toggle-check\",\n        type: \"checkbox\",\n        variant: checked.toString() === radio.value ? \"outline-primary\" : \"primary\",\n        disabled: true,\n        checked: true //   checked={checked.toString() === radio.value ? false : true}\n        ,\n        name: radio.name,\n        value: radio.value,\n        onClick: e => setChecked(radio.value),\n        children: [radio.name, console.log(checked.toString() === radio.value ? false : true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 10\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BtnGroup, \"Kdbsc/9B1s1cdNMfHC5DqbgH/SY=\");\n\n_c = BtnGroup;\nexport default BtnGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"BtnGroup\");","map":{"version":3,"sources":["/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/btnGroup/index.js"],"names":["React","useState","Button","ButtonGroup","ToggleButton","BtnGroup","checked","setChecked","radios","name","value","map","radio","idx","toString","e","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,YAA9B,QAAkD,iBAAlD;;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,GAAD,CAAtC;AACA,QAAMO,MAAM,GAAG,CACb;AAAEC,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GADa,EAEb;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAFa,EAGb;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAHa,CAAf;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,2BACE,QAAC,WAAD;AAAA,gBACGF,MAAM,CAACG,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,kBACX,QAAC,MAAD;AACC,QAAA,SAAS,EAAC,MADX;AAEC,QAAA,EAAE,EAAC,cAFJ;AAGC,QAAA,IAAI,EAAC,UAHN;AAIC,QAAA,OAAO,EAAGP,OAAO,CAACQ,QAAR,OAAuBF,KAAK,CAACF,KAA7B,GAAqC,iBAArC,GAA0D,SAJrE;AAKC,QAAA,QAAQ,MALT;AAMC,QAAA,OAAO,EAAE,IANV,CAOD;AAPC;AAQC,QAAA,IAAI,EAAEE,KAAK,CAACH,IARb;AASC,QAAA,KAAK,EAAEG,KAAK,CAACF,KATd;AAUC,QAAA,OAAO,EAAGK,CAAD,IAAOR,UAAU,CAACK,KAAK,CAACF,KAAP,CAV3B;AAAA,mBAYEE,KAAK,CAACH,IAZR,EAaEO,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACQ,QAAR,OAAuBF,KAAK,CAACF,KAA7B,GAAqC,KAArC,GAA6C,IAAzD,CAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA9BQL,Q;;KAAAA,Q;AAgCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, ButtonGroup, ToggleButton } from \"react-bootstrap\";\nfunction BtnGroup() {\n  const [checked, setChecked] = useState(\"1\");\n  const radios = [\n    { name: \"1\", value: \"1\" },\n    { name: \"2\", value: \"2\" },\n    { name: \"3\", value: \"3\" },\n  ];\n  return (\n    <div className=\" justify-content-center\">\n      <ButtonGroup>\n        {radios.map((radio, idx) => (\n         <Button\n          className=\"mb-2\"\n          id=\"toggle-check\"\n          type=\"checkbox\"\n          variant= {checked.toString() === radio.value ? \"outline-primary\"  : \"primary\"}\n          disabled\n          checked={true}\n        //   checked={checked.toString() === radio.value ? false : true}\n          name={radio.name}\n          value={radio.value}\n          onClick={(e) => setChecked(radio.value)}\n        >\n          {radio.name}\n          {console.log(checked.toString() === radio.value ? false : true)}\n        </Button>\n        ))}\n      </ButtonGroup>\n    </div>\n  );\n}\n\nexport default BtnGroup;\n"]},"metadata":{},"sourceType":"module"}