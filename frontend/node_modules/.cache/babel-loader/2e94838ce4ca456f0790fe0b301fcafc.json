{"ast":null,"code":"var _jsxFileName = \"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Modal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\nimport db from \"../db/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuizModal() {\n  _s();\n\n  const [show, setShow] = useState(true);\n  const [optionNum, setOptionNum] = useState(2);\n  const [quiz, setquiz] = useState({});\n  const alpha = [\"A.\", \"B.\", \"C.\", \"D.\", \"E.\", \"F.\", \"G.\", \"H.\"];\n\n  function handleClose() {\n    setShow(false);\n  }\n\n  useEffect(() => {\n    db.getMCQ().then(mcqs => console.log(mcqs));\n  }, []);\n\n  function submit() {\n    db.addMCQ(quiz).then(mcqs => console.log(mcqs)).catch(e => console.log(e));\n  }\n\n  function handleChange(e) {\n    setquiz({ ...quiz,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleOptions(e) {\n    let options = quiz.options !== undefined ? quiz.options : [];\n    options[e.target.name] = e.target.value;\n    setquiz({ ...quiz,\n      [e.target.placeholder]: [...options]\n    });\n  }\n\n  function handleRemove() {\n    let options = quiz.options;\n    options.pop();\n    setquiz({ ...quiz,\n      options: [...options]\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        className: \"normalFont\",\n        children: \"Add M.C.Q\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            name: \"question\",\n            type: \"question\",\n            placeholder: \"Enter question\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), alpha.map((options, index) => index < optionNum && /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1 text-center normalFont\",\n                children: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: index,\n                placeholder: \"options\",\n                required: true,\n                onChange: handleOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex \",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: optionNum > alpha.length - 1,\n            variant: \"outline-success \",\n            onClick: () => setOptionNum(optionNum + 1),\n            block: true,\n            className: \"addOptionBtn \",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-circle-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: optionNum < 3,\n            variant: \"outline-danger \",\n            onClick: () => {\n              setOptionNum(optionNum - 1);\n              handleRemove();\n            },\n            className: \"addOptionBtn \",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"close-circle-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizModal, \"9P+YKDY6U0qSlgRcqx5H41WRSbE=\");\n\n_c = QuizModal;\nexport default QuizModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizModal\");","map":{"version":3,"sources":["/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Modal/index.js"],"names":["React","useEffect","useState","Modal","Button","Form","Row","Col","db","QuizModal","show","setShow","optionNum","setOptionNum","quiz","setquiz","alpha","handleClose","getMCQ","then","mcqs","console","log","submit","addMCQ","catch","e","handleChange","target","name","value","handleOptions","options","undefined","placeholder","handleRemove","pop","map","index","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\nimport db from \"../db/index\";\n\nfunction QuizModal() {\n  const [show, setShow] = useState(true);\n  const [optionNum, setOptionNum] = useState(2);\n\n  const [quiz, setquiz] = useState({});\n  const alpha = [\"A.\", \"B.\", \"C.\", \"D.\", \"E.\", \"F.\", \"G.\", \"H.\"];\n  function handleClose() {\n    setShow(false);\n  }\n\n  useEffect(() => {\n    db.getMCQ().then((mcqs) => console.log(mcqs));\n  }, []);\n\n  function submit(){\n    db.addMCQ(quiz).then((mcqs) => console.log(mcqs)).catch(e => console.log(e));\n  }\n\n  function handleChange(e) {\n    setquiz({ ...quiz, [e.target.name]: e.target.value });\n  }\n\n  function handleOptions(e) {\n    let options = quiz.options !== undefined ? quiz.options : [];\n    options[e.target.name] = e.target.value;\n    setquiz({ ...quiz, [e.target.placeholder]: [...options] });\n  }\n  \n  function handleRemove(){\n    let options = quiz.options;\n    options.pop()\n    setquiz({ ...quiz, options: [...options] });\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      {/* Header */}\n      <Modal.Header>\n        <Modal.Title className=\"normalFont\">Add M.C.Q</Modal.Title>\n      </Modal.Header>\n      {/* Body */}\n\n      <Form onSubmit={submit} >\n        <Modal.Body>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Question</Form.Label>\n            <Form.Control\n              required\n              name=\"question\"\n              type=\"question\"\n              placeholder=\"Enter question\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            {/* Option */}\n            <Form.Label>Options</Form.Label>\n            {alpha.map(\n              (options, index) =>\n                index < optionNum && (\n                  <Row className=\"mt-2\">\n                    <Col>\n                      <div className=\"mt-1 text-center normalFont\">\n                        {options}\n                      </div>\n                    </Col>\n                    <Col xs={10}>\n                      <Form.Control\n                        name={index}\n                        placeholder=\"options\"\n                        required\n                        onChange={handleOptions}\n                      />\n                    </Col>\n                  </Row>\n                )\n            )}\n            {/* Add and Remove btn */}\n          </Form.Group>\n          <div className=\"d-flex \">\n            <Button\n              disabled={optionNum > alpha.length - 1}\n              variant=\"outline-success \"\n              onClick={() => setOptionNum(optionNum + 1)}\n              block\n              className=\"addOptionBtn \"\n            >\n              <ion-icon name=\"add-circle-outline\"></ion-icon>\n            </Button>\n            <Button\n              disabled={optionNum < 3}\n              variant=\"outline-danger \"\n              onClick={() => {\n                setOptionNum(optionNum - 1);\n                handleRemove()\n              }}\n              className=\"addOptionBtn \"\n            >\n              <ion-icon name=\"close-circle-outline\"></ion-icon>\n            </Button>\n          </div>\n        </Modal.Body>\n        {/* Footer */}\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" type=\"submit\">\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default QuizModal;\n"]},"metadata":{},"sourceType":"module"}