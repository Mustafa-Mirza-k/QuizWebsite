{"ast":null,"code":"var _jsxFileName = \"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Modal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\nimport db from \"../db/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuizModal({\n  visibility,\n  setVisiblity,\n  id,\n  task\n}) {\n  _s();\n\n  const [optionNum, setOptionNum] = useState(2);\n  const [quiz, setquiz] = useState(null);\n  const alpha = [\"A.\", \"B.\", \"C.\", \"D.\", \"E.\", \"F.\", \"G.\", \"H.\"];\n  useEffect(() => {\n    if (task !== \"Add\") {\n      db.getMCQbyid(id).then(mcqs => {\n        const mcq = mcqs.data.quiz;\n        setquiz(mcq);\n        setOptionNum(mcq.options.length);\n      });\n    }\n  }, []);\n\n  function submit() {\n    task === \"Add\" ? db.addMCQ(quiz).then(mcqs => console.log(mcqs)).catch(e => console.log(e)) : db.updateMCQ(quiz).then(mcq => console.log(mcq));\n  }\n\n  function handleChange(e) {\n    setquiz({ ...quiz,\n      [e.target.name]: e.target.value\n    });\n    console.log(quiz);\n  }\n\n  function handleOptions(e) {\n    let options = quiz.options !== undefined ? quiz.options : [];\n    options[e.target.name] = e.target.value;\n    setquiz({ ...quiz,\n      [e.target.placeholder]: [...options]\n    });\n  }\n\n  function handleRemove() {\n    let options = quiz.options;\n    options.pop();\n    setquiz({ ...quiz,\n      options: [...options]\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: visibility,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        className: \"normalFont\",\n        children: [\" \", task, \" M.C.Q\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            value: quiz && quiz.question,\n            name: \"question\",\n            type: \"question\",\n            placeholder: \"Enter question\",\n            onChange: handleChange,\n            disabled: task === \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), alpha.map((options, index) => index < optionNum && /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1 text-center normalFont\",\n                children: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                value: quiz && quiz.options && quiz.options[index],\n                placeholder: \"options\",\n                name: index,\n                required: true,\n                onChange: handleOptions,\n                disabled: task === \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), task !== \"View\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex \",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: optionNum > alpha.length - 1,\n            variant: \"outline-success \",\n            onClick: () => setOptionNum(optionNum + 1),\n            block: true,\n            className: \"addOptionBtn \",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-circle-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: optionNum < 3,\n            variant: \"outline-danger \",\n            onClick: () => {\n              setOptionNum(optionNum - 1);\n              handleRemove();\n            },\n            className: \"addOptionBtn \",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"close-circle-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: setVisiblity,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), task !== \"View\" && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizModal, \"ev77hJEl85aFqKPIwgK+OxWTO5A=\");\n\n_c = QuizModal;\nexport default QuizModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizModal\");","map":{"version":3,"sources":["/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Modal/index.js"],"names":["React","useEffect","useState","Modal","Button","Form","Row","Col","db","QuizModal","visibility","setVisiblity","id","task","optionNum","setOptionNum","quiz","setquiz","alpha","getMCQbyid","then","mcqs","mcq","data","options","length","submit","addMCQ","console","log","catch","e","updateMCQ","handleChange","target","name","value","handleOptions","undefined","placeholder","handleRemove","pop","question","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\nimport db from \"../db/index\";\n\nfunction QuizModal({ visibility, setVisiblity, id, task }) {\n  const [optionNum, setOptionNum] = useState(2);\n\n  const [quiz, setquiz] = useState(null);\n  const alpha = [\"A.\", \"B.\", \"C.\", \"D.\", \"E.\", \"F.\", \"G.\", \"H.\"];\n\n  useEffect(() => {\n    if (task !== \"Add\") {\n      db.getMCQbyid(id).then((mcqs) => {\n        const mcq = mcqs.data.quiz;\n        setquiz(mcq);\n        setOptionNum(mcq.options.length);\n      });\n    }\n  }, []);\n\n  function submit() {\n    task === \"Add\"\n      ? db\n          .addMCQ(quiz)\n          .then((mcqs) => console.log(mcqs))\n          .catch((e) => console.log(e))\n      : db.updateMCQ(quiz).then((mcq) => console.log(mcq));\n  }\n\n  function handleChange(e) {\n    setquiz({ ...quiz, [e.target.name]: e.target.value });\n    console.log(quiz);\n  }\n\n  function handleOptions(e) {\n    let options = quiz.options !== undefined ? quiz.options : [];\n    options[e.target.name] = e.target.value;\n    setquiz({ ...quiz, [e.target.placeholder]: [...options] });\n  }\n\n  function handleRemove() {\n    let options = quiz.options;\n    options.pop();\n    setquiz({ ...quiz, options: [...options] });\n  }\n\n  return (\n    <Modal show={visibility}>\n      {/* Header */}\n      <Modal.Header>\n        <Modal.Title className=\"normalFont\"> {task} M.C.Q</Modal.Title>\n      </Modal.Header>\n      {/* Body */}\n\n      <Form onSubmit={submit}>\n        <Modal.Body>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Question</Form.Label>\n            <Form.Control\n              required\n              value={quiz && quiz.question}\n              name=\"question\"\n              type=\"question\"\n              placeholder=\"Enter question\"\n              onChange={handleChange}\n              disabled={task === \"View\"}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            {/* Option */}\n            <Form.Label>Options</Form.Label>\n            {alpha.map(\n              (options, index) =>\n                index < optionNum && (\n                  <Row className=\"mt-2\">\n                    <Col>\n                      <div className=\"mt-1 text-center normalFont\">\n                        {options}\n                      </div>\n                    </Col>\n                    <Col xs={10}>\n                      <Form.Control\n                        value={quiz && quiz.options && quiz.options[index]}\n                        placeholder=\"options\"\n                        name={index}\n                        required\n                        onChange={handleOptions}\n                        disabled={task === \"View\"}\n                      />\n                    </Col>\n                  </Row>\n                )\n            )}\n          </Form.Group>\n          {/* Add and Remove btn */}\n          {task !== \"View\" && (\n            <div className=\"d-flex \">\n              <Button\n                disabled={optionNum > alpha.length - 1}\n                variant=\"outline-success \"\n                onClick={() => setOptionNum(optionNum + 1)}\n                block\n                className=\"addOptionBtn \"\n              >\n                <ion-icon name=\"add-circle-outline\"></ion-icon>\n              </Button>\n              <Button\n                disabled={optionNum < 3}\n                variant=\"outline-danger \"\n                onClick={() => {\n                  setOptionNum(optionNum - 1);\n                  handleRemove();\n                }}\n                className=\"addOptionBtn \"\n              >\n                <ion-icon name=\"close-circle-outline\"></ion-icon>\n              </Button>\n            </div>\n          )}\n        </Modal.Body>\n        {/* Footer */}\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={setVisiblity}>\n            Close\n          </Button>\n          {task !== \"View\" && (\n            <Button variant=\"primary\" type=\"submit\">\n              {task}\n            </Button>\n          )}\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default QuizModal;\n"]},"metadata":{},"sourceType":"module"}