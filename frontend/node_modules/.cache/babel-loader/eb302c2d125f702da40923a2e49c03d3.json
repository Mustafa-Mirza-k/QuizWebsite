{"ast":null,"code":"var _jsxFileName = \"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Question/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport Optionbtn from \"../btnOption\";\nimport { decrement, increment } from \"../../Redux/mcqCounter\";\nimport { addScore } from \"../../Redux/scores\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question({\n  MCQs,\n  setSubmit\n}) {\n  _s();\n\n  const mcqCount = useSelector(state => state.mcqCounter.mcqCount);\n  const scores = useSelector(state => state.scoresTrack.scores);\n  const dispatch = useDispatch();\n  const options = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n  const [checked, setChecked] = useState(\"None\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content w-100 \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"normalFont d-flex  \",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-weight-bold mr-4\",\n        children: \"1/2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Quizheader mb-2\",\n      children: \"Question # \" + (mcqCount + 1) + \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuizQuestion m-2\",\n      children: MCQs[mcqCount].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuizContent\",\n      children: [MCQs[mcqCount].options.map((option, index) => /*#__PURE__*/_jsxDEV(Optionbtn, {\n        text: options[index] + \". \" + option,\n        id: options[index],\n        onClick: () => {\n          dispatch(addScore({\n            index: mcqCount,\n            value: index\n          }));\n          setChecked(options[index]);\n        },\n        checked: scores[mcqCount] !== index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"quizbtn w-25\",\n          disabled: mcqCount == 0,\n          onClick: () => dispatch(decrement()),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"quizbtn w-25\",\n          onClick: () => MCQs.length === mcqCount + 1 ? setSubmit(true) : dispatch(increment()),\n          children: MCQs.length === mcqCount + 1 ? \"Submit\" : \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"rmGv+n125gu2DjLTT41YfI6Uv6w=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Question/index.js"],"names":["React","useState","useDispatch","useSelector","Button","Optionbtn","decrement","increment","addScore","Question","MCQs","setSubmit","mcqCount","state","mcqCounter","scores","scoresTrack","dispatch","options","checked","setChecked","question","map","option","index","value","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport Optionbtn from \"../btnOption\";\nimport { decrement, increment } from \"../../Redux/mcqCounter\";\nimport { addScore } from \"../../Redux/scores\";\n\nfunction Question({ MCQs, setSubmit }) {\n  const mcqCount = useSelector((state) => state.mcqCounter.mcqCount);\n  const scores = useSelector((state) => state.scoresTrack.scores);\n  const dispatch = useDispatch();\n  const options = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n  const [checked, setChecked] = useState(\"None\");\n\n\n  return (\n    <div className=\"content w-100 \">\n      <div className=\"normalFont d-flex  \"><h2 className=\"font-weight-bold mr-4\">1/2</h2></div>\n      <div className=\"Quizheader mb-2\">\n        {\"Question # \" + (mcqCount + 1) + \":\"}\n      </div>\n      \n      <div className=\"QuizQuestion m-2\">{MCQs[mcqCount].question}</div>\n\n      <div className=\"QuizContent\">\n        {MCQs[mcqCount].options.map((option, index) => (\n          <Optionbtn\n            text={options[index] + \". \" + option}\n            id={options[index]}\n            onClick={() => {\n              dispatch(addScore({index : mcqCount, value: index}))\n              setChecked(options[index]);\n            }}\n            checked={scores[mcqCount] !== index }\n          />\n        ))}\n\n        <div className=\"centered\">\n          <Button\n            className=\"quizbtn w-25\"\n            disabled={mcqCount == 0}\n            onClick={() => dispatch(decrement())}\n          >\n            Previous\n          </Button>\n          <Button\n            className=\"quizbtn w-25\"\n            onClick={() =>\n              MCQs.length === mcqCount + 1\n                ? setSubmit(true)\n                : dispatch(increment())\n            }\n          >\n            {MCQs.length === mcqCount + 1 ? \"Submit\" : \"Next\"}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}