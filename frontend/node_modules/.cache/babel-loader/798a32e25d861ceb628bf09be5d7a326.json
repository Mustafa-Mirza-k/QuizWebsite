{"ast":null,"code":"var _jsxFileName = \"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Question/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport Optionbtn from \"../btnOption\";\nimport { decrement, increment } from \"../../Redux/mcqCounter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question({\n  MCQs\n}) {\n  _s();\n\n  const {\n    mcqCount\n  } = useSelector(state => state.mcqCounter.mcqCount);\n  const dispatch = useDispatch();\n  const options = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n  const [checked, setChecked] = useState(\"None\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content w-100 \",\n    children: [console.log(mcqCount && MCQs[mcqCount]), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Quizheader mb-2\",\n      children: \"Question # \" + mcqCount + 1 + \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuizQuestion m-2\",\n      children: MCQs[mcqCount].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuizContent\",\n      children: [MCQs[mcqCount].options.map((option, index) => /*#__PURE__*/_jsxDEV(Optionbtn, {\n        text: options[index] + \". \" + option,\n        id: options[index],\n        onClick: () => setChecked(options[index]),\n        checked: checked !== options[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"quizbtn w-25\",\n          onClick: () => dispatch(decrement()),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"quizbtn w-25\",\n          onClick: () => dispatch(increment()),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"r818xrRULp/e+UABaO+TtDT5HZQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Question/index.js"],"names":["React","useState","useDispatch","useSelector","Button","ButtonGroup","ToggleButton","Optionbtn","decrement","increment","Question","MCQs","mcqCount","state","mcqCounter","dispatch","options","checked","setChecked","console","log","question","map","option","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,YAA9B,QAAkD,iBAAlD;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,wBAArC;;;AACA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA2B;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAeT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBF,QAA7B,CAAhC;AACA,QAAMG,QAAQ,GAAGb,WAAW,EAA5B;AAGA,QAAMc,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAhB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,MAAD,CAAtC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,eACGkB,OAAO,CAACC,GAAR,CAAYR,QAAQ,IAAID,IAAI,CAACC,QAAD,CAA5B,CADH,eAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBAAkC,gBAAgBA,QAAhB,GAA2B,CAA3B,GAA+B;AAAjE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAAmCD,IAAI,CAACC,QAAD,CAAJ,CAAeS;AAAlD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,iBACGV,IAAI,CAACC,QAAD,CAAJ,CAAeI,OAAf,CAAuBM,GAAvB,CAA2B,CAACC,MAAD,EAASC,KAAT,kBAC1B,QAAC,SAAD;AACE,QAAA,IAAI,EAAER,OAAO,CAACQ,KAAD,CAAP,GAAiB,IAAjB,GAAwBD,MADhC;AAEE,QAAA,EAAE,EAAEP,OAAO,CAACQ,KAAD,CAFb;AAGE,QAAA,OAAO,EAAE,MAAMN,UAAU,CAACF,OAAO,CAACQ,KAAD,CAAR,CAH3B;AAIE,QAAA,OAAO,EAAEP,OAAO,KAAKD,OAAO,CAACQ,KAAD;AAJ9B;AAAA;AAAA;AAAA;AAAA,cADD,CADH,eAUE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAE,MAAKT,QAAQ,CAACP,SAAS,EAAV,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAE,MAAKO,QAAQ,CAACN,SAAS,EAAV,CAAvD;AAAA,oBAAuE;AAAvE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA7BQC,Q;UACcP,W,EACJD,W;;;KAFVQ,Q;AA+BT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {useDispatch, useSelector} from 'react-redux'\nimport { Button, ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport Optionbtn from \"../btnOption\";\nimport { decrement, increment } from \"../../Redux/mcqCounter\";\nfunction Question({ MCQs}) {\n  const { mcqCount } = useSelector((state) => state.mcqCounter.mcqCount);\n  const dispatch = useDispatch(); \n\n\n  const options = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n  const [checked, setChecked] = useState(\"None\");\n  return (\n    <div className=\"content w-100 \">\n      {console.log(mcqCount && MCQs[mcqCount])}\n      <div className=\"Quizheader mb-2\">{\"Question # \" + mcqCount + 1 + \":\"}</div>\n      <div className=\"QuizQuestion m-2\">{MCQs[mcqCount].question}</div>\n      <div className=\"QuizContent\">\n        {MCQs[mcqCount].options.map((option, index) => (\n          <Optionbtn\n            text={options[index] + \". \" + option}\n            id={options[index]}\n            onClick={() => setChecked(options[index])}\n            checked={checked !== options[index]}\n          />\n        ))}\n\n        <div className=\"centered\">\n          <Button className=\"quizbtn w-25\" onClick={()=> dispatch(decrement())}>Previous</Button>\n          <Button className=\"quizbtn w-25\" onClick={()=> dispatch(increment())}>{\"Next\"}</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}