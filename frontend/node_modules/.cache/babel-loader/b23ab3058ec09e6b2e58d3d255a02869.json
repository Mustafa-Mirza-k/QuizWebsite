{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  mcqCount: 0\n};\nexport const mcqCounterSlice = createSlice({\n  name: \"mcqCount\",\n  initialState,\n  reducers: {\n    increment: state => {\n      state.mcqCount += 1;\n    },\n    decrement: state => {\n      state.mcqCount > 0 && (state.mcqCount -= 1);\n    },\n    reset: state => {\n      state.mcqCount = 0;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  increment,\n  decrement,\n  reset\n} = mcqCounterSlice.actions;\nexport default mcqCounterSlice.reducer;","map":{"version":3,"sources":["/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Redux/mcqCounter.js"],"names":["createSlice","initialState","mcqCount","mcqCounterSlice","name","reducers","increment","state","decrement","reset","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,OAAO,MAAMC,eAAe,GAAGH,WAAW,CAAC;AACzCI,EAAAA,IAAI,EAAE,UADmC;AAEzCH,EAAAA,YAFyC;AAGzCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAGC,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACL,QAAN,IAAkB,CAAlB;AACF,KAHO;AAIRM,IAAAA,SAAS,EAAGD,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACL,QAAN,GAAiB,CAAjB,KAAuBK,KAAK,CAACL,QAAN,IAAkB,CAAzC;AACD,KANO;AAORO,IAAAA,KAAK,EAAGF,KAAD,IAAW;AAChBA,MAAAA,KAAK,CAACL,QAAN,GAAiB,CAAjB;AACD;AATO;AAH+B,CAAD,CAAnC,C,CAgBP;;AACA,OAAO,MAAM;AAAEI,EAAAA,SAAF;AAAaE,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,IAAkCN,eAAe,CAACO,OAAxD;AAEP,eAAeP,eAAe,CAACQ,OAA/B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  mcqCount: 0,\n};\n\nexport const mcqCounterSlice = createSlice({\n  name: \"mcqCount\",\n  initialState,\n  reducers: {\n    increment: (state) => {\n       state.mcqCount += 1;\n    },\n    decrement: (state) => {\n      state.mcqCount > 0 && (state.mcqCount -= 1)\n    },\n    reset: (state) => {\n      state.mcqCount = 0;\n    }\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { increment, decrement, reset } = mcqCounterSlice.actions;\n\nexport default mcqCounterSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}