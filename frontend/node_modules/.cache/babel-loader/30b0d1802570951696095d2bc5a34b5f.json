{"ast":null,"code":"var _jsxFileName = \"/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Modal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Modal, Button, Form, Row, Col, Dropdown } from \"react-bootstrap\";\nimport db from \"../db/index\";\nimport Message from \"../Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuizModal({\n  visibility,\n  setVisiblity,\n  id,\n  task\n}) {\n  _s();\n\n  const [optionNum, setOptionNum] = useState(2);\n  const [quiz, setquiz] = useState(null);\n  const alpha = [\"A.\", \"B.\", \"C.\", \"D.\", \"E.\", \"F.\", \"G.\", \"H.\"];\n  const [messageShow, setmessageShow] = useState(false);\n  const [message, setmessage] = useState(\"\");\n  const [success, setsuccess] = useState(null);\n  const [answer, setAnswer] = useState(\"Select the answer!\");\n\n  function toggleMessage() {\n    setmessageShow(!messageShow);\n  }\n\n  function infoMessage(message, success) {\n    setmessage(message);\n    toggleMessage();\n    setsuccess(success);\n  }\n\n  useEffect(() => {\n    if (task !== \"Add\") {\n      db.getMCQbyid(id).then(mcqs => {\n        const mcq = mcqs.data.quiz;\n        setquiz(mcq);\n        setOptionNum(mcq.options.length);\n      }).catch(error => infoMessage(error.message, false));\n    }\n  }, []);\n\n  function submit(e) {\n    e.preventDefault();\n    answer !== \"Select the answer!\" ? task === \"Add\" ? db.addMCQ(quiz).then(data => {\n      data.status !== 404 && data.status !== 500 ? infoMessage(\"Successfully added MCQ\", true) : infoMessage(\"Something went wrong\", false);\n      window.location.reload(false);\n    }).catch(e => console.log(e)) : db.updateMCQ(id, quiz).then(data => {\n      data.status !== 404 && data.status !== 500 ? infoMessage(\"Successfully updated the MCQ\", true) : infoMessage(\"Something went wrong\", false);\n      window.location.reload(false);\n    }).catch(e => console.log(e)) : infoMessage(\"Please select the answer!\", false);\n  }\n\n  function handleChange(e) {\n    console.log(e.target.value); // setquiz({ ...quiz, [e.target.name]: e.target.value });\n  }\n\n  function handleOptions(e) {\n    let options = quiz && quiz.hasOwnProperty(\"options\") ? quiz.options : [];\n    options[e.target.name] = e.target.value;\n    setquiz({ ...quiz,\n      [e.target.placeholder]: [...options]\n    });\n  }\n\n  function handleSelect(e) {\n    setquiz({ ...quiz,\n      answer: [e]\n    });\n  }\n\n  function handleRemove() {\n    let options = quiz.options;\n    options.pop();\n    setquiz({ ...quiz,\n      options: [...options]\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: visibility,\n    children: [/*#__PURE__*/_jsxDEV(Message, {\n      show: messageShow,\n      setShow: toggleMessage,\n      message: message,\n      success: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        className: \"normalFont\",\n        children: [\" \", task, \" M.C.Q\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            value: quiz && quiz.question,\n            name: \"question\",\n            type: \"question\",\n            placeholder: \"Enter question\",\n            onChange: handleChange,\n            disabled: task === \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), alpha.map((options, index) => index < optionNum && /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1 text-center normalFont\",\n                children: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                value: quiz && quiz.options && quiz.options[index],\n                placeholder: \"options\",\n                name: index,\n                required: true,\n                onChange: handleOptions,\n                disabled: task === \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), task !== \"View\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex \",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: optionNum > alpha.length - 1,\n            variant: \"outline-success \",\n            onClick: () => setOptionNum(optionNum + 1),\n            block: true,\n            className: \"addOptionBtn \",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-circle-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: optionNum < 3,\n            variant: \"outline-danger \",\n            onClick: () => {\n              setOptionNum(optionNum - 1);\n              quiz && quiz.options.length === optionNum && handleRemove();\n            },\n            className: \"addOptionBtn \",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"close-circle-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            onSelect: handleSelect,\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"success\",\n              id: \"dropdown-basic\",\n              children: quiz && quiz.answer ? alpha[quiz.answer] : answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              name: \"answer\",\n              children: alpha.map((options, index) => index < optionNum && /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                eventKey: index,\n                className: \"text-center\",\n                children: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: setVisiblity,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), task !== \"View\" && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizModal, \"z0M/TNdKv1SxDP+Y0pSEoBTUos0=\");\n\n_c = QuizModal;\nexport default QuizModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizModal\");","map":{"version":3,"sources":["/Volumes/LocalDiskC/MERN/QuizWebsite/QuizWebsite/frontend/src/Components/Modal/index.js"],"names":["React","useEffect","useState","Modal","Button","Form","Row","Col","Dropdown","db","Message","QuizModal","visibility","setVisiblity","id","task","optionNum","setOptionNum","quiz","setquiz","alpha","messageShow","setmessageShow","message","setmessage","success","setsuccess","answer","setAnswer","toggleMessage","infoMessage","getMCQbyid","then","mcqs","mcq","data","options","length","catch","error","submit","e","preventDefault","addMCQ","status","window","location","reload","console","log","updateMCQ","handleChange","target","value","handleOptions","hasOwnProperty","name","placeholder","handleSelect","handleRemove","pop","question","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Modal, Button, Form, Row, Col, Dropdown } from \"react-bootstrap\";\nimport db from \"../db/index\";\nimport Message from \"../Message\";\n\nfunction QuizModal({ visibility, setVisiblity, id, task }) {\n  const [optionNum, setOptionNum] = useState(2);\n  const [quiz, setquiz] = useState(null);\n  const alpha = [\"A.\", \"B.\", \"C.\", \"D.\", \"E.\", \"F.\", \"G.\", \"H.\"];\n  const [messageShow, setmessageShow] = useState(false);\n  const [message, setmessage] = useState(\"\");\n  const [success, setsuccess] = useState(null);\n  const [answer, setAnswer] = useState(\"Select the answer!\");\n  function toggleMessage() {\n    setmessageShow(!messageShow);\n  }\n\n  function infoMessage(message, success) {\n    setmessage(message);\n    toggleMessage();\n    setsuccess(success);\n  }\n\n  useEffect(() => {\n    if (task !== \"Add\") {\n      db.getMCQbyid(id)\n        .then((mcqs) => {\n          const mcq = mcqs.data.quiz;\n          setquiz(mcq);\n          setOptionNum(mcq.options.length);\n        })\n        .catch((error) => infoMessage(error.message, false));\n    }\n  }, []);\n\n  function submit(e) {\n    e.preventDefault();\n    answer !== \"Select the answer!\"\n      ? task === \"Add\"\n        ? db\n            .addMCQ(quiz)\n            .then((data) => {\n              data.status !== 404 && data.status !== 500\n                ? infoMessage(\"Successfully added MCQ\", true)\n                : infoMessage(\"Something went wrong\", false);\n              window.location.reload(false);\n            })\n            .catch((e) => console.log(e))\n        : db\n            .updateMCQ(id, quiz)\n            .then((data) => {\n              data.status !== 404 && data.status !== 500\n                ? infoMessage(\"Successfully updated the MCQ\", true)\n                : infoMessage(\"Something went wrong\", false);\n              window.location.reload(false);\n            })\n            .catch((e) => console.log(e))\n      : infoMessage(\"Please select the answer!\", false);\n  }\n\n  function handleChange(e) {\n    console.log(e.target.value);\n    // setquiz({ ...quiz, [e.target.name]: e.target.value });\n  }\n\n  function handleOptions(e) {\n    let options = quiz && quiz.hasOwnProperty(\"options\") ? quiz.options : [];\n    options[e.target.name] = e.target.value;\n    setquiz({ ...quiz, [e.target.placeholder]: [...options] });\n  }\n  function handleSelect(e) {\n    setquiz({ ...quiz, answer: [e] });\n  }\n\n  function handleRemove() {\n    let options = quiz.options;\n    options.pop();\n    setquiz({ ...quiz, options: [...options] });\n  }\n\n  return (\n    <Modal show={visibility}>\n      <Message\n        show={messageShow}\n        setShow={toggleMessage}\n        message={message}\n        success={success}\n      />\n      {/* Header */}\n      <Modal.Header>\n        <Modal.Title className=\"normalFont\"> {task} M.C.Q</Modal.Title>\n      </Modal.Header>\n      {/* Body */}\n\n      <Form onSubmit={submit}>\n        <Modal.Body>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Question</Form.Label>\n            <Form.Control\n              required\n              value={quiz && quiz.question}\n              name=\"question\"\n              type=\"question\"\n              placeholder=\"Enter question\"\n              onChange={handleChange}\n              disabled={task === \"View\"}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            {/* Option */}\n            <Form.Label>Options</Form.Label>\n            {alpha.map(\n              (options, index) =>\n                index < optionNum && (\n                  <Row className=\"mt-2\">\n                    <Col>\n                      <div className=\"mt-1 text-center normalFont\">\n                        {options}\n                      </div>\n                    </Col>\n                    <Col xs={10}>\n                      <Form.Control\n                        value={quiz && quiz.options && quiz.options[index]}\n                        placeholder=\"options\"\n                        name={index}\n                        required\n                        onChange={handleOptions}\n                        disabled={task === \"View\"}\n                      />\n                    </Col>\n                  </Row>\n                )\n            )}\n          </Form.Group>\n          {/* Add and Remove btn */}\n          {task !== \"View\" && (\n            <div className=\"d-flex \">\n              <Button\n                disabled={optionNum > alpha.length - 1}\n                variant=\"outline-success \"\n                onClick={() => setOptionNum(optionNum + 1)}\n                block\n                className=\"addOptionBtn \"\n              >\n                <ion-icon name=\"add-circle-outline\"></ion-icon>\n              </Button>\n              <Button\n                disabled={optionNum < 3}\n                variant=\"outline-danger \"\n                onClick={() => {\n                  setOptionNum(optionNum - 1);\n                  quiz && quiz.options.length === optionNum && handleRemove();\n                }}\n                className=\"addOptionBtn \"\n              >\n                <ion-icon name=\"close-circle-outline\"></ion-icon>\n              </Button>\n            </div>\n          )}\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Answer</Form.Label>\n            <Dropdown onSelect={handleSelect}>\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                {quiz && quiz.answer ? alpha[quiz.answer] : answer}\n              </Dropdown.Toggle>\n              <Dropdown.Menu name=\"answer\">\n                {alpha.map(\n                  (options, index) =>\n                    index < optionNum && (\n                      <Dropdown.Item eventKey={index} className=\"text-center\">\n                        {options}\n                      </Dropdown.Item>\n                    )\n                )}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Form.Group>\n        </Modal.Body>\n        {/* Footer */}\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={setVisiblity}>\n            Close\n          </Button>\n          {task !== \"View\" && (\n            <Button variant=\"primary\" type=\"submit\">\n              {task}\n            </Button>\n          )}\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default QuizModal;\n"]},"metadata":{},"sourceType":"module"}